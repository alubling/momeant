.user-profile{:class => @user.is_a?(Creator) ? "creator" : ""}
  .top{:class => @user.is_a?(Creator) ? "created-stories" : "curatorial-stream"}
    = render "stories/gallery"
  
    .user-info
      .avatar-name
        .avatar= image_tag(@user.avatar.url(:thumbnail))
        .name= @user.name
      .tagline tagline
      .actions
        = subscribe_button(@user)
    .clear

  .subscribers
    .count
      .number= @user.subscribers.count
      .label= pluralize(@user.subscribers.count, "subscriber").gsub(/[^a-z]/,"")
    %ul.avatars
      - @user.subscribers.each do |user|
        %li
          %a{:href => user_path(user)}
            = image_tag(user.avatar.url(:thumbnail), :class => "tooltipped", :title => user.name)
            %span.name= user.name
  
  
  .recommendation-stream
    .tabs
      = link_to("subscribed", "#", :class => "active", :id => "subscribed-to-recommendations")
      = link_to("Mo&#149;meant".html_safe, "#", :id => "momeant-recommendations")
      .clear
  
    %ul.subscribed-to-stream.stories
      - @user.recommended_stories_from_people_i_subscribe_to[0..3].each do |story|
        %li
          %a.thumbnail{:href => preview_story_path(story)}
            - if story.thumbnail
              - @page = story.thumbnail
              = render :partial => "stories/page_themes/#{@page.partial_name}", :locals => {:size => "petite"}
          .info
            = link_to(story.title, preview_story_path(story), :class => "title")
            .author by #{story.user.name}
          .price= story.price
  
    %ul.momeant-recommended-stream.stories.hidden
      - @user.stories_similar_to_my_bookmarks_and_purchases[0..3].each do |story|
        %li= link_to(story.title, preview_story_path(story))
  
  .comments Comments (coming soon...)

  - if @user.is_a?(Creator)
    .curatorial-stream
      %h3 My curatorial stream
      %ul.stories
        = render @user.recommended_stories
              
  - if me?(@user)
    = render "stories/personal_library"

    - if @user.is_admin?
      .admin
        %h3 Admin
        = link_to("Pay Periods", admin_pay_periods_path)