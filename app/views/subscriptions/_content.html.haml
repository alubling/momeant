%li.content

  .creator
    .rewarded
      %span.amount= number_to_currency(current_user.rewards_given_to(content.user) * Reward.dollar_exchange)
      %span.text already rewarded
    %ul.previously-rewarded
      - current_user.given_rewards.for_user(content.user).but_not_for(content).limit(8).includes(:story).each do |reward|
        %li
          %a{:href => story_url(reward.story)}
            .title= truncate(reward.story.title, :length => 25)
            .amount= number_to_currency(reward.dollar_amount)
    .creator-info
      .card
        = link_to image_tag(content.user.avatar.url(:thumbnail)), user_path(content.user), :class => "avatar"
        = link_to content.user.name, user_path(content.user), :class => "name"
        .since following since #{current_user.inverse_subscriptions.where(:user_id => content.user.id).first.since}
      
  %a.content-preview{:href => story_path(content), :class => "#{content.media_type} #{content.template}"}
    - if content.text_media_type?
      .inner
        .image
        .quote= truncate(content.template_text, :length => 140)
    - else
      .inner{:style => "background-image: url(#{content.thumbnail.url(:large)})"}

  .info    
    .media-type{:class => content.media_type}
    .text
      = link_to content.title, story_url(content), :class => "title"
      .synopsis= truncate(content.synopsis, :length => 140)
      - if content.category
        %span.category= content.category
    .support= content.users_who_rewarded.count
  
  .comments
    .money #{number_to_currency(content.reward_dollars)} earned
    - comment_text = pluralize(content.comments.size, "comment").split(" ")
    %a.toggle-comments{:href => "#"}
      %span.amount= comment_text[0]
      %span.text= comment_text[1]
    .insides
      %ul.comment-list
        = render :partial => "comments/comment", :collection => content.comments, :as => :comment
      = render "comments/form", :commentable => content