#reward-them
  %h1 Reward my work

  - if current_user && !current_user.is_under_pledged_rewards_stop_threshold?
    #over-threshold
      %p
        You have pledged #{number_to_currency(current_user.pledged_amount)} in rewards. That's awesome!
        %br
        But we need you to pay for those rewards before rewarding more; that way we can pay the creators you've supported.
        You can do that #{link_to "here", fund_rewards_path, target: "_blank"}.
        
  - elsif current_user && current_user.needs_to_reauthorize_amazon_postpaid?
    #reauthorize
      %p We need you to re-authorize your Amazon Payment method before rewarding again. Please visit the link below for more info.
      = link_to "Manage your payment method", fund_rewards_path, target: "_blank"

  - else
    = form_for :reward, :url => user_rewards_path(@user), :html => {:id => "reward-form"} do |form|
      = form.hidden_field :impacted_by, :value => params[:impacted_by] if params[:impacted_by]
      = form.hidden_field :content_url, :value => @content_url

      #amounts
        %p 1. Choose a fair amount
        = form.text_field :amount, placeholder: "1+"
        
      - if @user.thank_you_levels.any?
        %table
          %thead
            %tr
              %th.give If you give...
              %th.get You get...
          %tbody
            - @user.thank_you_levels.each do |level|
              %tr
                %td.give #{number_to_currency(level.amount, precision: 0)} +
                %td.get= level.description
      
      - if me?(@user)
        = link_to "Give Reward", "#", id: "fake-reward-submit", class: "button"
      - else
        = form.submit "Give Reward", id: "reward_submit", style: current_user.nil? ? "display:none" : ""
      - unless current_user
        = link_to "Log In to Reward", "#login", id: "login-button", class: "button"
  
      #invalid-reward-amount