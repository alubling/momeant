:javascript
  var labelType, useGradients, nativeTextSupport, animate;

  (function() {
    var ua = navigator.userAgent,
        iStuff = ua.match(/iPhone/i) || ua.match(/iPad/i),
        typeOfCanvas = typeof HTMLCanvasElement,
        nativeCanvasSupport = (typeOfCanvas == 'object' || typeOfCanvas == 'function'),
        textSupport = nativeCanvasSupport 
          && (typeof document.createElement('canvas').getContext('2d').fillText == 'function');
    //I'm setting this based on the fact that ExCanvas provides text support for IE
    //and that as of today iPhone/iPad current text support is lame
    labelType = (!nativeCanvasSupport || (textSupport && !iStuff))? 'Native' : 'HTML';
    nativeTextSupport = labelType == 'Native';
    useGradients = nativeCanvasSupport;
    animate = !(iStuff || !nativeCanvasSupport);
  })();


  function init(){
      //init data
      var json = #{@reward.descendants_tree(@reward.descendants).to_json};

      //end
      //init Spacetree
      //Create a new ST instance
      var st = new $jit.ST({
          //id of viz container element
          injectInto: 'reward-chain',
          //set duration for the animation
          duration: 200,
          width: 780,
          height: 300,
          orientation: 'top',
          //set animation transition type
          transition: $jit.Trans.Quart.easeInOut,
          //set distance between node and its children
          levelDistance: 30,
          //enable panning
          Navigation: {
            enable:true,
            panning:true,
            zooming: false
          },
          //set node and edge styles
          //set overridable=true for styling individual
          //nodes or edges
          Node: {
              height: 60,
              width: 60,
              type: 'rectangle',
              color: '#fff',
              overridable: true
          },

          Edge: {
              type: 'bezier',
              overridable: true,
              color: '#eee'
          },

          //This method is called on DOM label creation.
          //Use this method to add event handlers and styles to
          //your node.
          onCreateLabel: function(domElement, node){
              var first = '';
              if (node.getParents().length == 0) {
                first = ' first';
              }
              var html = '<div class="person"><img src="' + node.data.avatar + '"/>';
              html += '<span class="tooltip' + first + '"><div class="inner"><div class="name">' + node.data.name + '</div><div class="amount">' + node.data.amount + '</div>';
              if (node.data.comment) {
                html += '<div class="comment">' + node.data.comment + '</div>';
              }
              html += '</div></div>';
              domElement.innerHTML = html;
          }
      });
      //load json data
      st.loadJSON(json);
      //compute node positions and layout
      st.compute();
      //optional: make a translation of the tree
      st.geom.translate(new $jit.Complex(0, -200), "current");
      //emulate a click on the root node.
      st.onClick(st.root);
      //end
  }
  
  init();