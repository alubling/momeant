- if current_user.blank?
  = render :partial => "shared/calls_to_action/signup"

.story-preview
  = bookmark_button(@story) unless @story.owner?(current_user)
  .preview.clearfix
    .padder
      %a.thumbnail.large{:href => current_user.blank? ? "#signup-modal" : story_path(@story)}
        .inner= image_tag(@story.thumbnail.url(:large))
    .actions
      = views_link(@story)
      = rewards_link(@story)
      - @hide_reward_tab = true
      = render "reward_modal"
      = story_view_link(@story)
      
      = #render "add_this"
      
      - if @story.owner?(current_user)
        .owner-links
          .links
            - if @story.draft?
              .publish
                - if @story.valid?
                  = link_to "Publish", publish_story_path(@story), :id => "publish-link", :method => :post unless @story.published?
                  %p (Your story is still in draft mode)
                - else
                  %span Before you can publish your story, please #{link_to("edit it", edit_story_path(@story))} and fix these issues:
                  %ul
                    - @story.errors.full_messages.each do |msg|
                      %li= msg
            = link_to "Edit", edit_story_path(@story), :id => "edit-link"
            = link_to "Delete", story_path(@story), :id => "delete-link", :method => :delete, :confirm => "Are you sure you want to delete this story?"

  .metadata
    .top
      = link_to(@story.title, story_path(@story), :class => "title")
      .creator by: #{link_to(@story.user.name, user_path(@story.user))}
      .series
        %span.current 1
        %span.of /
        %span.total 1
    .excerpt= @story.synopsis
    .topics
      - @story.topics.each do |topic|
        = link_to(topic.name.downcase, topic_path(topic), :class => "#{topic.name.downcase} tooltipped-n", :title => topic.name.downcase)
    .tags
      - @story.tags.each do |tag|
        .tag
          = link_to(tag.name, stories_tagged_with_path(tag.name.gsub('.','%2E')))
          - if @story.owner?(current_user)
            = link_to("x", remove_tag_from_story_path(@story, :tag => tag.name),:class => "remove tooltipped-n", :title => "Remove tag", :remote => true, :method => :delete)

  .top-patrons
    %h3 Top Patrons
    %ul.users
      - @story.users_who_rewarded.limit(15).each do |user|
        %li= link_to(image_tag(user.avatar.url(:thumbnail)), user_path(user), :class => "tooltipped", :title => user.name)
        
  .curations
    .writer
      %h3 Join the Conversation:
      .input-types
        = link_to("Write a Comment", "#", :class => "comment")
      = form_for Curation.new, :url => story_curations_path(@story) do |form|
        = form.hidden_field :type, :value => "comment"
        = form.text_area :comment
        = form.submit "Post"
      - if current_user.blank?
        = link_to("", "#signup-modal", :id => "non-logged-user-tries-to-comment")
    %ul.list
      - @story.curations.public.each do |curation|
        %li{:class => curation.class.to_s.downcase}
          = link_to(image_tag(curation.user.avatar.url(:thumbnail)), user_path(curation.user), :class => "avatar")
          .the-rest
            .who-when
              .author= link_to(curation.user.name, user_path(curation.user))
              .date= curation.created_at.strftime("%m/%d/%y")
            - if curation.comment.present?
              .comment= curation.comment