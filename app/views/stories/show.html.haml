- content_for :head do
  = javascript_include_tag "stories/show"

.story-viewer

  .reward-stream

    %ul.reward-list

      %li#give-reward{:class => current_user.nil? ? "no-user" : ""}
        - if current_user
          = form_for :reward, :url => user_rewards_path(current_user), :html => {:id => "reward-form"} do |form|
            = form.hidden_field :story_id, :value => @story.id
            = form.hidden_field :impacted_by, :value => @impacting_reward.id if @impacting_reward
            = form.label :amount, "I want to reward this"
            .amount-input
              = form.text_field :amount, :value => 1
              %span.out-of of my #{current_user.coins}
            = form.text_area :comment, :placeholder => "Tell your followers why you're rewarding this..."
            .impacter-and-submit
              - if @impacting_reward
                .impacter
                  = link_to(image_tag(@impacting_reward.user.avatar(:thumbnail)), user_path(@impacting_reward.user), :class => "avatar")
                  .name #{@impacting_reward.user.name} helped you find this content.
              = form.submit "Reward"
        - else
          = link_to("Sign up to reward this!", "#signup-modal", :class => "button")

      - if current_user
        %li#new-reward
          .rewarder
            = link_to(image_tag(current_user.avatar(:thumbnail)), user_path(current_user), :class => "avatar")
            %a.name{:href => user_path(current_user)}
              %span= current_user.first_name
              %span= current_user.last_name
            .amount
          .comment
          .when just now
      - @story.rewards.each do |reward|
        %li{:class => reward == @impacting_reward ? "highlighted" : ""}
          .rewarder
            = link_to(image_tag(reward.user.avatar(:thumbnail)), user_path(reward.user), :class => "avatar")
            %a.name{:href => user_path(reward.user)}
              %span= reward.user.first_name
              %span= reward.user.last_name
            .amount= reward.amount
          - if reward.comment.present?
            .comment= reward.comment
          .when #{time_ago_in_words(reward.created_at)} ago
  
  .content

    #number-of-pages.hidden= @story.pages.count
  
    %ul#pages
      - pages = @story.pages
      - pages = @story.pages[0,1] if !current_user
      - pages.each do |page|
        - @page = page
        %li{:id => "page_#{page.number}", :class => page.number == 1 ? "#{page.css_class}" : "#{page.css_class} hidden"}
          = render "/stories/page_themes/#{page.partial_name}"
  
    #previous-page
      .button{:title => "Previous page"} previous page
    #next-page
      .button{:title => "Next page"} next page
  
    #metadata
      .info
        .title= @story.title
        .author by #{link_to(@story.user.name, user_path(@story.user))}
        .excerpt
          .full= @story.synopsis
      .pages
        - 1.upto @story.pages.count do |page|
          = link_to(page, "#", :class => page == 1 ? "selected" : "", :page => page)
        
- if !current_user
  - content_for :javascript do
    :javascript
      prevent_closing_of_signup_modal = true;
      $('#join-login-modal .close').hide();
      $('#join-login-modal').show();