- content_for :head do
  = javascript_include_tag "stories/presenter"
- content_for :meta do
  %meta{:property => "og:title", :content => @story.title}
  %meta{:property => "og:description", :content => @story.synopsis}
  %meta{:property => "og:image", :content => @story.thumbnail.url(:tiny)}

#presenter

  #reward-modal

    %a#reward-modal-tab
      = image_tag(@story.user.avatar.url(:thumbnail), :class => "avatar")
      .text
        %span Reward
        %span= @story.user.name
      .rewards= @story.rewards.sum(:amount)

    .modal-inner
    
      #your-reward
        #creator-info
          = link_to(image_tag(@story.user.avatar.url), user_path(@story.user), :class => "avatar")
          = link_to(@story.user.name, user_path(@story.user), :class => "name")
          - unless @story.user.tagline.blank?
            .tagline= truncate(@story.user.tagline, :length => 300)
          .links
            = link_to("view other work", creations_user_path(@story.user))
            = link_to("view full profile", user_path(@story.user))
          
        - @user = @story.user
        = render "shared/reward_modal"

      #reward-list.closed
        .header Community Rewards
        %ul
          - if current_user
            %li#new-reward
              .rewarder
                = link_to(image_tag(current_user.avatar(:thumbnail)), user_path(current_user), :class => "avatar")
                %a.name{:href => user_path(current_user)}
                  %span= current_user.first_name
                  %span= current_user.last_name
                .amount
              .comment
              .when just now
          - @story.rewards.each do |reward|
            %li{:class => reward == @impacting_reward ? "highlighted" : ""}
              .rewarder
                = link_to(image_tag(reward.user.avatar(:thumbnail)), user_path(reward.user), :class => "avatar")
                %a.name{:href => user_path(reward.user)}
                  %span= reward.user.first_name
                  %span= reward.user.last_name
                .amount= reward.amount
              - if reward.comment.present?
                .comment= reward.comment
              .when #{time_ago_in_words(reward.created_at)} ago
  
  .content
  
    %ul#pages
      - pages = @story.pages
      - pages.each do |page|
        - @page = page
        %li{:id => "page_#{page.number}", :class => page.number == 1 ? "#{page.css_class}" : "#{page.css_class} hidden"}
          = render "/stories/page_themes/#{page.partial_name}"
  
    #previous-page
      .button{:title => "Previous page"} previous page
    #next-page
      .button{:title => "Next page"} next page
  
    #metadata
      .info
        .title= @story.title
        .author by #{link_to(@story.user.name, user_path(@story.user))}
        .excerpt
          .full= @story.synopsis
      .pages
        - 1.upto @story.pages.count do |page|
          = link_to(page, "#", :class => page == 1 ? "selected" : "", :page => page)